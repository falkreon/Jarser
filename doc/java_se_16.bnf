Keyword: /
		abstract | continue | for     | new          | switch | assert     |
		default  | if       | package | synchronized | boolean| do         |
		goto     | private  | this    | break        | double | implements |
		protected| throw    | byte    | else         | import | public     |
		throws   | case     | enum    | instanceof   | return | transient  |
		catch    | extends  | int     | short        | try    | char       |
		final    | interface| static  | void         | class  | finally    |
		long     | strictfp | volatile| const        | float  | native     |
		super    | while    | _
		/;
BooleanLiteral: /true|false/;
NullLiteral: /null/;
Identifier: /[\p{Letter}$_][\p{Letter}\p{Digit}$_]*/;

BinaryIntegerLiteral:  /0[bB](?<value>[01](?:_*[01]+)*[lL]?)/;
OctalIntegerLiteral:   /0(?<value>[0-7](?:_*[0-7]+)*[lL]?)/;
HexIntegerLiteral:     /0[xX](?<value>[0-9a-fA-F](?:_*[0-9a-fA-F]+)*[lL]?)/;
DecimalIntegerLiteral: /0|(?:[1-9](?:_*[0-9]+)*[lL]?)/;



IntegerLiteral: DecimalIntegerLiteral | HexIntegerLiteral | OctalIntegerLiteral | BinaryIntegerLiteral;

//I'm sorry, everyone, for what you're about to witness
DecimalFloatingPointLiteral: /[0-9](?:_*[0-9]*)*\.(?:[0-9](?:_*[0-9]*)*)?(?:[eE][-+]?[0-9](?:_*[0-9]*)*)?[fFdD]?|\.[0-9](?:_*[0-9]*)*(?:[eE][-+]?[0-9](?:_*[0-9]*)*)?[fFdD]?|[0-9](?:_*[0-9]*)*[fFdD]|[0-9](?:_*[0-9]*)*(?:[eE][-+]?[0-9](?:_*[0-9]*)*)[fFdD]?/;

HexadecimalFloatingPointLiteral: /(?:0[xX](?:(?:[0-9a-fA-F](?:_*[0-9a-fA-F]+)*)\.?)|(?:(?:0[xX])?[0-9a-fA-F](?:_*[0-9a-fA-F]+)*)\.(?:[0-9a-fA-F](?:_*[0-9a-fA-F]+)*))[pP](?:[-+]?[0-9](?:_*[0-9]+)*)[fFdD]?/;

FloatingPointLiteral: DecimalFloatingPointLiteral | HexadecimalFloatingPointLiteral;

BooleanLiteral: "true" | "false";

